# 3. Реализовать функцию перевода числа в строковое представление,
# без использования встроенных функции языка программирования,
# если такие есть в явном виде (Например, для 1С без использования функции ЧислоПрописью).
#
#  Пример: 1020 - > «Одна тысяча двадцать».
#
# Число целое положительное или ноль.
#
# Не больше 100 000 000, но программа должна ЛЕГКО расширяться для добавления больших чисел.
# Это очень важное условие.

from check_num import check_num

def as_words(n):

    ones = ['ноль', 'один', 'два', 'три', 'четыре',
            'пять', 'шесть', 'семь', 'восемь', 'девять',
            'десять', 'одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать',
            'пятнадцать', 'шестнадцать', 'семнадцать', 'восемнадцать', 'девятнадцать']
    tens = ['ноль', 'десять', 'двадцать', 'тридцать', 'сорок',
            'пятдесят', 'шестьдесят', 'семьдесят', 'восемьдесят', 'девяносто']
    hundreds = ['ноль', 'сто', 'двести', 'триста', 'четыреста', 'пятсот', 'шестьсот',
                'семьсот', 'восемьсот', 'девятсот']
    # 1000+
    for order, word in [(10**9, "миллиард"),(10**6, "миллион"),(10**3, "тысяч")]:
    ### (10**12, "триллион"),
        if n >= order:
            return "{0} {1}{2}".format(as_words(n // order), word, " {0}".format(as_words(n % order)))
    # 100-999
    if n >= 100:
        if n % 100:
            return "{0} {1}".format(hundreds[n//100], as_words(n % 100))
        else:
            return hundreds[n//100]
    # 0-99
    if n < 20:
        return ones[n]
    else:
        return "{0}{1}".format(tens[n // 10], " {0}".format(as_words(n % 10)))

num=input("Введите число: \n")
while check_num(num) == False:
    num = input("Повторите ввод: ")
num = int(num)
print(as_words(num))